---
import { languages } from '../i18n/ui';
import { getLangFromUrl } from '../i18n/utils';

const currentLang = getLangFromUrl(Astro.url);
const currentPath = Astro.url.pathname.replace(`/${currentLang}`, '');
---

<div class="language-switcher">
  <button type="button" id="language-menu-button" class="language-button">
    <span class="language-flag">{languages[currentLang].flag}</span>
    <span class="language-name">{languages[currentLang].name}</span>
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="m6 9 6 6 6-6"></path>
    </svg>
  </button>

  <div id="language-menu" class="language-menu hidden">
    {Object.entries(languages).map(([lang, { name, flag }]) => (
      <a
        href={`/${lang}`}
        class={`language-option ${currentLang === lang ? 'active' : ''}`}
      >
        <span class="language-flag">{flag}</span>
        <span>{name}</span>
      </a>
    ))}
  </div>
</div>



<style>
.language-switcher {
  position: relative;
}

.language-button {
  display: flex;
  align-items: center;
  gap: 0.25rem;
  color: var(--navy-800);
  background: none;
  border: none;
  cursor: pointer;
  transition: color 0.2s ease-in-out;
  padding: 0.25rem;
  background-color: #ffe88c;
  border: 1px solid #ffe88c;
}

.language-button:hover {
  color: var(--yellow-400);
  border: 1px solid #ffe88c;
}

.language-flag {
  font-size: 1.25rem;
}

.language-name {
  display: none;
}

.language-menu {
  position: absolute;
  top: 100%;
  right: 0;
  z-index: 10;
  width: 10rem;
  background-color: var(--navy-800);
  border-radius: 0.5rem;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  margin-top: 0.5rem;
  overflow: hidden;
}

.language-option {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1rem;
  transition: background-color 0.2s ease-in-out;
}

.language-option:hover {
  background-color: var(--navy-700);
}

.language-option.active {
  color: var(--yellow-400);
}

@media (min-width: 640px) {
  .language-name {
    display: inline;
  }
}


</style>



<script>
  const button = document.getElementById('language-menu-button');
  const menu = document.getElementById('language-menu');

  if (button && menu) {
    button.addEventListener('click', () => {
      menu.classList.toggle('hidden');
    });
    
    document.addEventListener('click', (event) => {
      if (!button.contains(event.target) && !menu.contains(event.target)) {
        menu.classList.add('hidden');
      }
    });
  }
</script>