---
export interface Props {
  title: string;
  description: string;
  pubDate: Date;
  slug: string;
  image?: string;
  tags?: string[];
  featured?: boolean;
}

const { title, description, pubDate, slug, image, tags, featured } = Astro.props;

// Format date
const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('en-US', { 
    year: 'numeric', 
    month: 'long', 
    day: 'numeric' 
  }).format(date);
};
---

<article class={`bg-navy-800 border border-navy-700 rounded-xl overflow-hidden transition-all duration-200 hover:border-navy-600 hover:-translate-y-1 h-full flex flex-col ${featured ? 'border-yellow-400 shadow-[0_0_20px_rgba(251,191,36,0.1)]' : ''}`}>
  {image && (
    <a href={`/blog/${slug}`} class="block overflow-hidden">
      <img 
        src={image} 
        alt={title} 
        class="w-full h-48 object-cover transition-transform duration-300 hover:scale-105"
        loading="lazy"
      />
    </a>
  )}
  <div class="p-6 flex flex-col flex-1">
    <div class="flex items-center justify-between mb-3 text-gray-400 text-sm">
      <span class="flex items-center gap-2">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
          <line x1="16" y1="2" x2="16" y2="6"></line>
          <line x1="8" y1="2" x2="8" y2="6"></line>
          <line x1="3" y1="10" x2="21" y2="10"></line>
        </svg>
        {formatDate(pubDate)}
      </span>
      {featured && (
        <span class="flex items-center gap-1 text-yellow-400 font-medium text-xs">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <polygon points="12,2 15.09,8.26 22,9.27 17,14.14 18.18,21.02 12,17.77 5.82,21.02 7,14.14 2,9.27 8.91,8.26"></polygon>
          </svg>
          Featured
        </span>
      )}
    </div>
    <h3 class="text-xl font-bold mb-3 leading-tight">
      <a href={`/blog/${slug}`} class="text-white hover:text-yellow-400 transition-colors duration-200">{title}</a>
    </h3>
    <p class="text-gray-300 mb-6 leading-relaxed flex-1 line-clamp-3">{description}</p>
    <div class="flex justify-between items-center border-t border-navy-700 pt-4 mt-auto">
      <a href={`/blog/${slug}`} class="inline-flex items-center gap-2 text-yellow-400 font-medium transition-all duration-200 hover:gap-3 text-sm">
        Read More
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="m9 18 6-6-6-6"></path>
        </svg>
      </a>
      {tags && tags.length > 0 && (
        <div class="flex gap-2">
          {tags.slice(0, 2).map(tag => (
            <span class="bg-navy-700 text-gray-300 px-3 py-1 rounded text-xs transition-colors duration-200 hover:bg-navy-600 hover:text-white">#{tag}</span>
          ))}
        </div>
      )}
    </div>
  </div>
</article>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style> 