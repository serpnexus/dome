---
export interface Props {
  title: string;
  description: string;
  pubDate: Date;
  slug: string;
  image?: string;
  tags?: string[];
  featured?: boolean;
}

const { title, description, pubDate, slug, image, tags, featured } = Astro.props;

// Format date
const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('en-US', { 
    year: 'numeric', 
    month: 'long', 
    day: 'numeric' 
  }).format(date);
};
---

<article class={`blog-post-card ${featured ? 'featured' : ''}`}>
  {image && (
    <a href={`/blog/${slug}`} class="blog-post-image-link">
      <img 
        src={image} 
        alt={title} 
        class="blog-post-image"
        loading="lazy"
      />
    </a>
  )}
  <div class="blog-post-content">
    <div class="blog-post-meta">
      <span class="blog-post-date">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
          <line x1="16" y1="2" x2="16" y2="6"></line>
          <line x1="8" y1="2" x2="8" y2="6"></line>
          <line x1="3" y1="10" x2="21" y2="10"></line>
        </svg>
        {formatDate(pubDate)}
      </span>
      {featured && (
        <span class="featured-badge">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <polygon points="12,2 15.09,8.26 22,9.27 17,14.14 18.18,21.02 12,17.77 5.82,21.02 7,14.14 2,9.27 8.91,8.26"></polygon>
          </svg>
          Featured
        </span>
      )}
    </div>
    <h3 class="blog-post-title">
      <a href={`/blog/${slug}`}>{title}</a>
    </h3>
    <p class="blog-post-excerpt">{description}</p>
    <div class="blog-post-footer">
      <a href={`/blog/${slug}`} class="read-more">
        Read More
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="m9 18 6-6-6-6"></path>
        </svg>
      </a>
      {tags && tags.length > 0 && (
        <div class="blog-post-tags">
          {tags.slice(0, 2).map(tag => (
            <span class="blog-post-tag">#{tag}</span>
          ))}
        </div>
      )}
    </div>
  </div>
</article>

<style>
  .blog-post-card {
    background-color: var(--navy-800);
    border: 1px solid var(--navy-700);
    border-radius: 0.75rem;
    overflow: hidden;
    transition: transform 0.2s ease, border-color 0.2s ease;
    height: 100%;
    display: flex;
    flex-direction: column;
  }
  
  .blog-post-card:hover {
    transform: translateY(-5px);
    border-color: var(--navy-600);
  }
  
  .blog-post-card.featured {
    border-color: var(--yellow-400);
    box-shadow: 0 0 20px rgba(251, 191, 36, 0.1);
  }
  
  .blog-post-image-link {
    display: block;
    overflow: hidden;
  }
  
  .blog-post-image {
    width: 100%;
    height: 200px;
    object-fit: cover;
    transition: transform 0.3s ease;
  }
  
  .blog-post-image-link:hover .blog-post-image {
    transform: scale(1.05);
  }
  
  .blog-post-content {
    padding: 1.5rem;
    flex: 1;
    display: flex;
    flex-direction: column;
  }
  
  .blog-post-meta {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 0.75rem;
    color: var(--gray-400);
    font-size: 0.875rem;
  }
  
  .blog-post-date {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .featured-badge {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    color: var(--yellow-400);
    font-weight: 500;
    font-size: 0.75rem;
  }
  
  .blog-post-title {
    font-size: 1.25rem;
    font-weight: 700;
    margin-bottom: 0.75rem;
    line-height: 1.3;
  }
  
  .blog-post-title a {
    color: var(--white);
    text-decoration: none;
    transition: color 0.2s ease;
  }
  
  .blog-post-title a:hover {
    color: var(--yellow-400);
  }
  
  .blog-post-excerpt {
    color: var(--gray-300);
    margin-bottom: 1.5rem;
    line-height: 1.6;
    flex: 1;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .blog-post-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-top: 1px solid var(--navy-700);
    padding-top: 1rem;
    margin-top: auto;
  }
  
  .read-more {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--yellow-400);
    font-weight: 500;
    text-decoration: none;
    transition: gap 0.2s ease;
    font-size: 0.875rem;
  }
  
  .read-more:hover {
    gap: 0.75rem;
  }
  
  .blog-post-tags {
    display: flex;
    gap: 0.5rem;
  }
  
  .blog-post-tag {
    background-color: var(--navy-700);
    color: var(--gray-300);
    padding: 0.25rem 0.75rem;
    border-radius: 0.375rem;
    font-size: 0.75rem;
    transition: background-color 0.2s ease;
  }
  
  .blog-post-tag:hover {
    background-color: var(--navy-600);
    color: var(--white);
  }
  
  @media (max-width: 768px) {
    .blog-post-title {
      font-size: 1.125rem;
    }
    
    .blog-post-content {
      padding: 1rem;
    }
    
    .blog-post-meta {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }
  }
</style> 