---
import { getLangFromUrl, useTranslations } from '../i18n/utils';
import LanguageSwitcher from './LanguageSwitcher.astro';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const navigation = [
  { href: lang === 'en' ? '/' : `/${lang}`, label: t('nav.home') },
  { href: `/tools`, label: "Tools" },
  { href: `/blog`, label: t('nav.blog') },
  { href: `/unicode`, label: t('nav.unicode') },
];
---

<nav class="fixed left-0 right-0 w-full z-50 animate-[slideDown_0.6s_cubic-bezier(0.4,0,0.2,1)]">
  <div class="max-w-1200 mx-auto p-2 flex items-center justify-between backdrop-blur-md border border-yellow-400/25 rounded-b-xl shadow-[0_8px_32px_rgba(18,28,65,0.4),inset_0_1px_0_rgba(255,215,0,0.2),inset_0_-1px_0_rgba(18,28,65,0.2)]">
    <a href={lang === 'en' ?  '/' : `/${lang}`} class="flex items-center text-xl font-bold text-white no-underline relative overflow-hidden hover:text-yellow-400 transition-colors duration-300">
      <img src="/images/logo.webp" alt="Invisible Text Logo" class="w-10 h-10 mr-1" width="40" height="40" loading="eager" decoding="async">
      InvisibleText
    </a>
    
    <div class="flex items-center gap-2">
      <ul class="hidden md:flex items-center gap-2 list-none m-0 p-0">
        {navigation.map(({ href, label }) => (
          <li class="relative">
            <a href={href} class="relative px-4 py-2 text-sm text-white/90 no-underline rounded-lg transition-all duration-300 hover:bg-yellow-400/10 hover:text-yellow-400 hover:-translate-y-0.5 focus:outline-2 focus:outline-yellow-400 focus:outline-offset-2 focus:rounded">
              {label}
            </a>
          </li>
        ))}
      </ul>
      
      <LanguageSwitcher class="" /> 
      
      <!-- Mobile Menu Button -->
      <button 
        id="mobile-menu-toggle"
        class="md:hidden flex flex-col gap-1.5 p-2 text-white hover:bg-yellow-400/10 rounded-lg transition-all duration-300 focus:outline-2 focus:outline-yellow-400 focus:outline-offset-2"
        aria-label="Toggle navigation menu"
        aria-expanded="false"
        aria-controls="mobile-menu"
      >
        <span class="block w-6 h-0.5 bg-white transition-all duration-300 origin-center"></span>
        <span class="block w-6 h-0.5 bg-white transition-all duration-300 origin-center"></span>
        <span class="block w-6 h-0.5 bg-white transition-all duration-300 origin-center"></span>
      </button>
    </div>
  </div>

  <!-- Mobile Menu -->
  <div 
    id="mobile-menu"
    class="hidden md:hidden absolute top-full left-0 right-0 mt-2 mx-2 bg-navy-900 backdrop-blur-md border border-yellow-400/25 rounded-xl shadow-[0_8px_32px_rgba(18,28,65,0.4),inset_0_1px_0_rgba(255,215,0,0.2),inset_0_-1px_0_rgba(18,28,65,0.2)] overflow-hidden transition-all duration-300 origin-top opacity-0 scale-y-95"
  >
    <ul class="flex flex-col list-none m-0 p-2 gap-1">
      {navigation.map(({ href, label }) => (
        <li>
          <a 
            href={href} 
            class="block px-4 py-3 text-sm text-yellow-100 no-underline rounded-lg transition-all duration-300 hover:bg-yellow-400/90 hover:text-navy-900 hover:translate-x-1 focus:outline-2 focus:outline-yellow-400 focus:outline-offset-2"
          >
            {label}
          </a>
        </li>
      ))}
    </ul>
  </div>
</nav>

<!-- Add this spacer to prevent content from hiding behind the navbar -->
<div class="h-20 w-full"></div>

<style>
  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  #mobile-menu {
    &.open {
      @apply block opacity-100 scale-y-100;
    }
  }

  #mobile-menu-toggle {
    &.active span:nth-child(1) {
      @apply rotate-45 translate-y-2;
    }

    &.active span:nth-child(2) {
      @apply opacity-0;
    }

    &.active span:nth-child(3) {
      @apply -rotate-45 -translate-y-2;
    }
  }

  /* Responsive design */
  @media (max-width: 767px) {
    .h-20 {
      height: 4.5rem;
    }
  }

  /* Dark theme optimizations */
  @media (prefers-color-scheme: dark) {
    nav > div {
      /* background: rgba(255, 215, 0, 0.05); */
      /* border-color: rgba(255, 215, 0, 0.15); */
    }
    
    .bg-yellow-400\/8 {
      background: rgba(255, 215, 0, 0.03);
    }
    
    .border-yellow-400\/25 {
      border-color: rgba(255, 215, 0, 0.12);
    }
  }

  /* Enhanced accessibility */
  @media (prefers-reduced-motion: reduce) {
    nav {
      animation: none;
    }
    
    nav a,
    nav > div > div > div:last-child > div,
    #mobile-menu-toggle span,
    #mobile-menu {
      transition: none;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const menuToggle = document.getElementById('mobile-menu-toggle');
    const mobileMenu = document.getElementById('mobile-menu');
    const navLinks = mobileMenu?.querySelectorAll('a');

    // Toggle menu on button click
    menuToggle?.addEventListener('click', () => {
      const isOpen = menuToggle.classList.contains('active');
      
      if (isOpen) {
        closeMenu();
      } else {
        openMenu();
      }
    });

    // Close menu when a link is clicked
    navLinks?.forEach(link => {
      link.addEventListener('click', () => {
        closeMenu();
      });
    });

    // Close menu when clicking outside
    document.addEventListener('click', (e) => {
      const isClickInsideNav = (e.target as HTMLElement).closest('nav');
      if (!isClickInsideNav && menuToggle?.classList.contains('active')) {
        closeMenu();
      }
    });

    // Close menu on Escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && menuToggle?.classList.contains('active')) {
        closeMenu();
      }
    });

    function openMenu() {
      menuToggle?.classList.add('active');
      mobileMenu?.classList.add('open');
      menuToggle?.setAttribute('aria-expanded', 'true');
    }

    function closeMenu() {
      menuToggle?.classList.remove('active');
      mobileMenu?.classList.remove('open');
      menuToggle?.setAttribute('aria-expanded', 'false');
    }
  });
</script>