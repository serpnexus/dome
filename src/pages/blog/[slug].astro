---
import Layout from '../../layouts/StaticPageLayout.astro';
import { getCollection, getEntry } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import { Image } from 'astro:assets';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

export const prerender = true;

const { post } = Astro.props;
const { Content } = await post.render();

// Get related posts
const allPosts = await getCollection('blog');
const relatedPosts = allPosts
  .filter(p => p.slug !== post.slug && p.data.tags?.some(tag => post.data.tags?.includes(tag)))
  .slice(0, 3);

// Get all tools for sidebar
const tools = [
  { name: 'Fancy Text Generator', href: '/tools/fancy-text-generator', icon: '✨', description: 'Transform text into fancy, stylized characters' },
  { name: 'Bold & Italic Converter', href: '/tools/bold-italic-converter', icon: '🔤', description: 'Convert text to bold and italic styles' },
  { name: 'High Valyrian Translator', href: '/tools/high-valyrian-translator', icon: '🐉', description: 'Translate English to High Valyrian' },
  { name: 'Case Converter', href: '/tools/case-converter', icon: '🔄', description: 'Convert text between different cases' },
  { name: 'Text Counter', href: '/tools/text-counter', icon: '📊', description: 'Count characters, words, and lines' },
];

// Format date
const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('en-US', { 
    year: 'numeric', 
    month: 'long', 
    day: 'numeric' 
  }).format(date);
};
---

<Layout title={post.data.title} description={post.data.description}>
  <div class="blog-post-layout">
    <!-- Left Sidebar - Table of Contents -->
    <aside class="blog-post-toc">
      <div class="toc-container">
        <div class="toc-header">
          <h3 class="toc-title">Table of Contents</h3>
          <button class="toc-toggle" id="tocToggle" aria-label="Toggle table of contents">
            <svg class="toc-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <line x1="3" y1="6" x2="21" y2="6"></line>
              <line x1="3" y1="12" x2="21" y2="12"></line>
              <line x1="3" y1="18" x2="21" y2="18"></line>
            </svg>
          </button>
        </div>
        <nav class="toc-nav" id="tocNav">
          <ul class="toc-list" id="tocList">
            <!-- Table of contents will be populated by JavaScript -->
          </ul>
        </nav>
      </div>
    </aside>

    <!-- Main Content -->
    <main class="blog-post-main">
      <article class="blog-post">
    <!-- Header -->
        <header class="blog-post-header">
          <div class="blog-post-meta">
            <span class="blog-post-date">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
            <line x1="16" y1="2" x2="16" y2="6"></line>
            <line x1="8" y1="2" x2="8" y2="6"></line>
            <line x1="3" y1="10" x2="21" y2="10"></line>
          </svg>
          <FormattedDate date={post.data.pubDate} />
        </span>
      </div>
      
          <h1 class="blog-post-title">{post.data.title}</h1>
      
      {post.data.description && (
            <p class="blog-post-description">{post.data.description}</p>
      )}
      
      {post.data.tags && post.data.tags.length > 0 && (
            <div class="blog-post-tags">
          {post.data.tags.map(tag => (
                <span class="blog-post-tag">#{tag}</span>
          ))}
        </div>
      )}
    </header>

    <!-- Featured Image -->
    {post.data.image && (
      <div class="blog-post-image">
        <Image 
          width={1200}
          height={600}
          src={post.data.image} 
          alt={post.data.title}
          class="blog-post-featured-image"
          height="510"
          width="1200"
          loading="lazy"
        />
      </div>
    )}

    <!-- Content -->
        <div class="blog-post-content" id="blogContent">
      <Content />
    </div>
      </article>
    </main>

    <!-- Right Sidebar - Tools -->
    <aside class="blog-post-sidebar">
      <div class="sidebar-container">
        <h3 class="sidebar-title">Text Tools</h3>
        <div class="tools-list">
          {tools.map(tool => (
            <a href={tool.href} class="tool-card">
              <div class="tool-icon">{tool.icon}</div>
              <div class="tool-info">
                <h4 class="tool-name">{tool.name}</h4>
                <p class="tool-description">{tool.description}</p>
              </div>
            </a>
          ))}
        </div>
        
        <div class="sidebar-section">
          <h4 class="sidebar-section-title">Quick Links</h4>
          <ul class="sidebar-links">
            <li><a href="/tools" class="sidebar-link">All Tools</a></li>
            <li><a href="/blog" class="sidebar-link">Blog</a></li>
            <li><a href="/unicode" class="sidebar-link">Unicode</a></li>
          </ul>
        </div>
      </div>
    </aside>
  </div>

  <!-- Related Posts Section (Full Width) -->
    {relatedPosts.length > 0 && (
    <section class="blog-post-related-full">
      <div class="related-container">
        <h2 class="blog-post-related-title">Related Articles</h2>
        <div class="blog-post-related-grid">
          {relatedPosts.map(relatedPost => (
            <article class="blog-post-related-card">
              {relatedPost.data.image && (
                <a href={`/blog/${relatedPost.slug}`} class="blog-post-related-image-link">
                  <img 
                    src={relatedPost.data.image} 
                    alt={relatedPost.data.title}
                    class="blog-post-related-image"
                  />
                </a>
              )}
              <div class="blog-post-related-content">
                <h3 class="blog-post-related-card-title">
                  <a href={`/blog/${relatedPost.slug}`} class="blog-post-related-link">
                    {relatedPost.data.title}
                  </a>
                </h3>
                <p class="blog-post-related-description">{relatedPost.data.description || ''}</p>
                <div class="blog-post-related-meta">
                  <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                    <line x1="16" y1="2" x2="16" y2="6"></line>
                    <line x1="8" y1="2" x2="8" y2="6"></line>
                    <line x1="3" y1="10" x2="21" y2="10"></line>
                  </svg>
                  <span>{formatDate(relatedPost.data.pubDate)}</span>
                </div>
              </div>
            </article>
          ))}
        </div>
        </div>
      </section>
    )}
</Layout>

<script>
  // Table of Contents functionality
  document.addEventListener('DOMContentLoaded', function() {
    const tocToggle = document.getElementById('tocToggle') as HTMLButtonElement | null;
    const tocNav = document.getElementById('tocNav') as HTMLElement | null;
    const tocList = document.getElementById('tocList') as HTMLUListElement | null;
    const blogContent = document.getElementById('blogContent') as HTMLElement | null;
    
    if (!tocToggle || !tocNav || !tocList || !blogContent) return;

    // Toggle TOC visibility
    tocToggle.addEventListener('click', function() {
      if (!tocNav) return;
      tocNav.classList.toggle('toc-collapsed');
      const isCollapsed = tocNav.classList.contains('toc-collapsed');
      tocToggle.setAttribute('aria-expanded', (!isCollapsed).toString());
      
      // Update icon
      const icon = tocToggle.querySelector('.toc-icon') as HTMLElement | null;
      if (icon) {
        if (isCollapsed) {
          icon.innerHTML = '<line x1="3" y1="6" x2="21" y2="6"></line><line x1="3" y1="12" x2="21" y2="12"></line><line x1="3" y1="18" x2="21" y2="18"></line>';
        } else {
          icon.innerHTML = '<line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line>';
        }
      }
    });

    // Generate table of contents
    function generateTOC() {
      if (!blogContent || !tocList) return;
      
      const headings = blogContent.querySelectorAll('h2, h3, h4');
      const tocItems: Array<{
        level: number;
        text: string | null;
        id: string;
        element: Element;
      }> = [];
      
      headings.forEach((heading, index) => {
        const level = parseInt(heading.tagName.charAt(1));
        const text = heading.textContent;
        const id = heading.id || `heading-${index}`;
        
        // Add ID if not present
        if (!heading.id) {
          heading.id = id;
        }
        
        tocItems.push({
          level,
          text,
          id,
          element: heading
        });
      });
      
      // Render TOC
      tocList.innerHTML = tocItems.map(item => {
        const indent = (item.level - 1) * 0.5;
        return `
          <li class="toc-item toc-level-${item.level}">
            <a href="#${item.id}" class="toc-link" style="padding-left: ${indent}rem; font-size: ${item.level === 1 ? '16px' : item.level === 2 ? '14px' : item.level === 3 ? '12px' : '10px'}">
              ${item.text || ''}
            </a>
          </li>
        `;
      }).join('');
      
      // Add click handlers for smooth scrolling
      tocList.querySelectorAll('.toc-link').forEach(link => {
        link.addEventListener('click', function(e: Event) {
          e.preventDefault();
          const target = e.target as HTMLAnchorElement;
          const targetId = target.getAttribute('href')?.substring(1);
          if (!targetId) return;
          
          const targetElement = document.getElementById(targetId);
          
          if (targetElement) {
            const headerHeight = 80; // Adjust based on your header height
            const elementPosition = (targetElement as HTMLElement).offsetTop - headerHeight;
            
            window.scrollTo({
              top: elementPosition,
              behavior: 'smooth'
            });
          }
        });
      });
    }
    
    // Generate TOC after content is loaded
    generateTOC();
    
    // Highlight current section in TOC
    function highlightCurrentSection() {
      if (!blogContent || !tocList) return;
      
      const headings = Array.from(blogContent.querySelectorAll('h2, h3, h4, h5, h6'));
      const scrollPosition = window.scrollY + 100;
      
      let currentHeading = headings[0] as HTMLElement;
      
      for (let i = headings.length - 1; i >= 0; i--) {
        const heading = headings[i] as HTMLElement;
        if (heading.offsetTop <= scrollPosition) {
          currentHeading = heading;
          break;
        }
      }
      
      // Remove previous active class
      tocList.querySelectorAll('.toc-link').forEach(link => {
        link.classList.remove('toc-active');
      });
      
      // Add active class to current section
      if (currentHeading) {
        const activeLink = tocList.querySelector(`a[href="#${currentHeading.id}"]`) as HTMLAnchorElement | null;
        if (activeLink) {
          activeLink.classList.add('toc-active');
        }
      }
    }
    
    // Update TOC highlighting on scroll
    window.addEventListener('scroll', highlightCurrentSection);
    
    // Initial highlight
    highlightCurrentSection();
  });
</script>

<style>
  /* Layout */
  .blog-post-layout {
    display: grid;
    grid-template-columns: 280px 1fr 300px;
    gap: 2rem;
    max-width: 1400px;
    margin: 0 auto;
    padding: 2rem 1rem;
    position: relative;
    top: 100;
  }

  /* Left Sidebar - Table of Contents */
  .blog-post-toc {
    position: sticky;
    top: 5rem;
    height: fit-content;
    max-height: calc(100vh - 4rem);
    overflow-y: auto;
  }

  .toc-container {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 16px;
    padding: 1rem;
    backdrop-filter: blur(10px);
  }

  .toc-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    
  }

  .toc-title {
    font-size: 1rem;
    font-weight: 600;
    color: rgb(var(--white));
    margin: 0;
  }

  .toc-toggle {
    background: none;
    border: none;
    color: rgb(var(--gray));
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 8px;
    transition: all 0.2s ease;
  }

  .toc-toggle:hover {
    background: rgba(255, 255, 255, 0.1);
    color: rgb(var(--white));
  }

  .toc-nav {
    transition: all 0.3s ease;
  }

  .toc-nav.toc-collapsed {
    max-height: 0;
    overflow: hidden;
  }

  .toc-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .toc-item {
    margin-bottom: 0.25rem;
  }

  .toc-link {
    display: block;
    color: rgb(var(--gray));
    text-decoration: none;
    padding: 0rem;
    border-radius: 8px;
    transition: all 0.2s ease;
    font-size: 0.5rem;
    line-height: 1.1;
  }

  .toc-link:hover {
    color: rgb(var(--white));
    background: rgba(255, 255, 255, 0.1);
    text-decoration: underline;
  }

  .toc-link.toc-active {
    text-color: rgb(255, 215, 0);
    background: rgba(255, 215, 0, 0.1);
    font-weight: 500;
  }

  .toc-level-1 { font-weight: 500; }
  .toc-level-2 { font-weight: 400; color: #ffd329;}
  .toc-level-3 { font-weight: 400; font-size: 0.60rem;}
  .toc-level-4 { font-weight: 400; font-size: 0.8rem; }
  .toc-level-5 { font-weight: 400; font-size: 0.75rem; }
  .toc-level-6 { font-weight: 400; font-size: 0.7rem; }

  /* Main Content */
  .blog-post-main {
    min-width: 0; /* Prevent grid overflow */
  }

  .blog-post {
    max-width: none;
    margin: 0;
    padding: 0;
  }

  /* Right Sidebar - Tools */
  .blog-post-sidebar {
    position: sticky;
    top: 5rem;
    height: fit-content;
    max-height: calc(100vh - 4rem);
    overflow-y: auto;
  }

  .sidebar-container {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 16px;
    padding: 1.5rem;
    backdrop-filter: blur(10px);
  }

  .sidebar-title {
    font-size: 1.125rem;
    font-weight: 600;
    color: rgb(var(--white));
    margin: 0 0 1.5rem 0;
  }

  .tools-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-bottom: 2rem;
  }

  .tool-card {
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
    padding: 1rem;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    text-decoration: none;
    transition: all 0.2s ease;
  }

  .tool-card:hover {
    background: rgba(255, 255, 255, 0.1);
    border-color: rgba(255, 215, 0, 0.3);
    transform: translateY(-2px);
  }

  .tool-icon {
    font-size: 1.5rem;
    flex-shrink: 0;
  }

  .tool-info {
    flex: 1;
    min-width: 0;
  }

  .tool-name {
    font-size: 0.875rem;
    font-weight: 600;
    color: rgb(var(--white));
    margin: 0 0 0.25rem 0;
    line-height: 1.3;
  }

  .tool-description {
    font-size: 0.75rem;
    color: rgb(var(--gray));
    margin: 0;
    line-height: 1.4;
  }

  .sidebar-section {
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    padding-top: 1.5rem;
  }

  .sidebar-section-title {
    font-size: 1rem;
    font-weight: 600;
    color: rgb(var(--white));
    margin: 0 0 1rem 0;
  }

  .sidebar-links {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .sidebar-links li {
    margin-bottom: 0.5rem;
  }
  
  .sidebar-link {
    display: block;
    color: rgb(var(--gray));
    text-decoration: none;
    padding: 0.5rem 0.75rem;
    border-radius: 8px;
    transition: all 0.2s ease;
    font-size: 0.875rem;
  }

  .sidebar-link:hover {
    color: rgb(var(--white));
    background: rgba(255, 255, 255, 0.1);
  }

  /* Related Posts Full Width */
  .blog-post-related-full {
    margin-top: 4rem;
    padding: 3rem 2rem;
    background: rgba(0, 0, 0, 0.2);
    border-top: 1px solid rgba(255, 255, 255, 0.1);
  }

  .related-container {
    max-width: 1200px;
    margin: 0 auto;
  }


  /* Blog Post Content - Using custom.css for typography */
  .blog-post-content {
    /* Typography handled by custom.css */
  }

  /* Scroll margin for headings */
  /* .blog-post-content h1 {
    font-size: clamp(1.75rem, 4vw, 2.5rem);
    font-weight: 700;
    color: rgb(255, 215, 0);
    margin: 3rem 0 1.5rem 0;
    line-height: 1.3;
    letter-spacing: -0.01em;
    scroll-margin-top: 100px;
  }

  .blog-post-content h2 {
    font-size: clamp(1.5rem, 3.5vw, 2rem);
    font-weight: 600;
    color: rgb(255, 193, 7); 
    margin: 2.5rem 0 1.25rem 0;
    line-height: 1.4;
    scroll-margin-top: 100px;
    border-bottom: 2px solid rgba(255, 193, 7, 0.3);
    padding-bottom: 0.5rem;
  }

  .blog-post-content h3 {
    font-size: clamp(1.25rem, 3vw, 1.5rem);
    font-weight: 600;
    color: rgb(209, 213, 219); 
    margin: 2rem 0 1rem 0;
    line-height: 1.4;
    scroll-margin-top: 100px;
  }

  .blog-post-content h4 {
    font-size: clamp(1.125rem, 2.5vw, 1.25rem);
    font-weight: 600;
    color: rgb(209, 213, 219);
    margin: 1.75rem 0 0.875rem 0;
    line-height: 1.4;
    scroll-margin-top: 100px;
  }

  .blog-post-content h5 {
    font-size: clamp(1rem, 2vw, 1.125rem);
    font-weight: 600;
    color: rgb(209, 213, 219);
    margin: 1.5rem 0 0.75rem 0;
    line-height: 1.4;
    scroll-margin-top: 100px;
  }

  .blog-post-content h6 {
    font-size: clamp(0.875rem, 1.8vw, 1rem);
    font-weight: 600;
    color: rgb(209, 213, 219); 
    margin: 1.25rem 0 0.625rem 0;
    line-height: 1.4;
    scroll-margin-top: 100px;
  } */

  /* Scroll margin for headings */
  .blog-post-content h1,
  .blog-post-content h2,
  .blog-post-content h3,
  .blog-post-content h4,
  .blog-post-content h5,
  .blog-post-content h6 {
    scroll-margin-top: 100px;
  }

  /* Custom H2 styling for differentiation */
  .blog-post-content h2 {
    border-bottom: 2px solid rgba(255, 193, 7, 0.3);
    padding-bottom: 0.5rem;
  }

  /* Paragraph styling handled by custom.css */

  .blog-post-content p:last-child {
    margin-bottom: 0;
  }

  /* List styling handled by custom.css */


  .blog-post-content a {
    color: rgb(255, 215, 0);
    text-decoration: underline;
    text-decoration-color: rgba(255, 215, 0, 0.4);
    text-underline-offset: 3px;
    transition: all 0.2s ease;
  }

  .blog-post-content a:hover {
    color: rgb(255, 193, 7);
    text-decoration-color: rgba(255, 193, 7, 0.6);
  }

  /* Blockquotes */
  /* Blockquote styling handled by custom.css */

  /* Code Blocks */
  /* Code styling handled by custom.css */

  /* Tables */
  /* Basic table styling */
  .blog-post-content table {
    width: 100%;
    border-collapse: collapse;
    margin: 2rem 0;
    overflow-x: auto;
  }

  .blog-post-content table th,
  .blog-post-content table td {
    padding: 0.75rem 1rem;
    text-align: left;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }

  .blog-post-content table th {
    background: rgba(255, 215, 0, 0.1);
    color: rgb(255, 215, 0);
    font-weight: 600;
  }

  .blog-post-content table tr:hover {
    background: rgba(255, 255, 255, 0.02);
  }

  /* Horizontal Rules */
  .blog-post-content hr {
    border: none;
    height: 2px;
    background: linear-gradient(90deg, transparent, rgba(255, 215, 0, 0.5), transparent);
    margin: 3rem 0;
  }

  /* Images in content */
  .blog-post-content img {
    max-width: 100%;
    height: auto;
    border-radius: 12px;
    margin: 2rem 0;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
  }

  /* Blog Post Header */
  .blog-post-header {
    margin-bottom: 3rem;
    text-align: center;
  }

  .blog-post-meta {
    margin-bottom: 1.5rem;
  }

  .blog-post-date {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: rgb(var(--gray));
    font-size: 0.875rem;
    font-weight: 500;
  }

  .blog-post-title {
    font-size: clamp(2rem, 6vw, 3.5rem);
    font-weight: 700;
    color: rgb(var(--white));
    margin: 0 0 1.5rem 0;
    line-height: 1.2;
    letter-spacing: -0.02em;
  }

  .blog-post-description {
    font-size: clamp(1.125rem, 3vw, 1.25rem);
    color: rgb(var(--gray));
    max-width: 600px;
    margin: 0 auto 1.5rem auto;
    line-height: 1.6;
  }

  .blog-post-tags {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 0.75rem;
  }

  .blog-post-tag {
    background: rgba(255, 215, 0, 0.1);
    color: rgb(255, 215, 0);
    padding: 0.5rem 1rem;
    border-radius: 9999px;
    font-size: 0.875rem;
    font-weight: 500;
    border: 1px solid rgba(255, 215, 0, 0.2);
    transition: all 0.2s ease;
  }

  .blog-post-tag:hover {
    background: rgba(255, 215, 0, 0.2);
    border-color: rgba(255, 215, 0, 0.4);
  }

  /* Featured Image */
  .blog-post-image {
    margin-bottom: 3rem;
  }

  .blog-post-featured-image {
    width: 100%;
    height: auto;
    border-radius: 16px;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
  }

  /* Related Posts Section */
  .blog-post-related-title {
    font-size: clamp(1.75rem, 4vw, 2.25rem);
    font-weight: 700;
    color: rgb(var(--white));
    text-align: center;
    margin-bottom: 2rem;
  }

  .blog-post-related-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 1.5rem;
    max-width: 1000px;
    margin: 0 auto;
  }

  .blog-post-related-card {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 16px;
    overflow: hidden;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
  }

  .blog-post-related-card:hover {
    border-color: rgba(255, 215, 0, 0.3);
    transform: translateY(-4px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
  }

  .blog-post-related-image-link {
    display: block;
    overflow: hidden;
  }

  .blog-post-related-image {
    width: 100%;
    height: 160px;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .blog-post-related-card:hover .blog-post-related-image {
    transform: scale(1.05);
  }

  .blog-post-related-content {
    padding: 1.25rem;
  }

  .blog-post-related-card-title {
    font-size: 1.125rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
  }

  .blog-post-related-link {
    color: rgb(var(--white));
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .blog-post-related-link:hover {
    color: rgb(255, 215, 0);
  }

  .blog-post-related-description {
    color: rgb(var(--gray));
    font-size: 0.875rem;
    margin-bottom: 0.75rem;
    line-height: 1.5;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .blog-post-related-meta {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: rgb(var(--gray));
    font-size: 0.75rem;
  }

  /* Responsive Design */
  @media (max-width: 1200px) {
    .blog-post-layout {
      grid-template-columns: 250px 1fr 280px;
      gap: 1.5rem;
      padding: 1.5rem 2rem;
    }
  }

  @media (max-width: 1024px) {
    .blog-post-layout {
      grid-template-columns: 1fr;
      gap: 2rem;
    }

    .blog-post-toc,
    .blog-post-sidebar {
      position: static;
      max-height: none;
    }

    .toc-container,
    .sidebar-container {
      margin-bottom: 2rem;
    }
  }

  @media (max-width: 768px) {
    .blog-post-layout {
      padding: 1rem;
    }

    .blog-post-related-full {
      padding: 2rem 1rem;
    }

    .blog-post-related-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }

    .blog-post-title {
      font-size: 2rem;
    }

    .blog-post-content {
      font-size: 1rem;
    }

    .blog-post-content h1 {
      font-size: 1.75rem;
    }

    .blog-post-content h2 {
      font-size: 1.5rem;
    }

    .blog-post-content h3 {
      font-size: 1.25rem;
    }
  }

  @media (max-width: 480px) {
    .blog-post-layout {
      padding: 2rem;
    }

    .blog-post-related-full {
      padding: 1.5rem 0.75rem;
    }

    .toc-container,
    .sidebar-container {
      padding: 1rem;
    }

    .tool-card {
      padding: 0.75rem;
    }
  }

  /* Print styles */
  @media print {
    .blog-post-toc,
    .blog-post-sidebar,
    .blog-post-related-full {
      display: none;
    }

    .blog-post-layout {
      grid-template-columns: 1fr;
      padding: 0;
    }

    .blog-post {
      max-width: none;
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .toc-link,
    .sidebar-link {
      text-decoration: underline;
    }

    .toc-link.toc-active {
      text-decoration: underline;
      text-decoration-thickness: 2px;
    }
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .tool-card,
    .blog-post-related-card {
      transition: none;
    }

    .tool-card:hover,
    .blog-post-related-card:hover {
      transform: none;
    }
  }
</style>

